#For this project, I downloaded Spotify data from Kaggle and I created a table to insert Spotify data into. 
Then I inserted the Spotify Data .csv into the table.#

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Next, I explored the data using the following SQL. 


/*First I determined the avg popularity, danceability, and energy by artist and track. */

SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name


/*t I determined the top 10 artists based on popularity?*/

SELECT artist_name, track_name,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

/*List songs with duration less than 4 mins in descending order*/

SELECT track_name, duration_ms
FROM BIT_DB.Spotifydata
WHERE duration_ms<240000
ORDER BY duration_ms desc;


/*I determined the artist who released the longest song*/

##Answer 1##
SELECT artist_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;


##Answer 2##
SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;


/*Then I ordered songs based on shortest duration*/

SELECT artist_name, track_name, MIN(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY duration_ms;

/*I also used CTE to calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, I pulled their name, 
their average popularity, and tag them as a “Top Star”.*/


WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;


/*Average danceability for the 10 most popular songs*/

--First, I run a query to filter the 10 most popular songs--

SELECT track_name 
FROM BIT_DB.Spotifydata 
ORDER BY popularity desc LIMIT 10;

--Then, I find the avergae danceability of the top 10 songs by using subquery--

SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE track_name IN (SELECT track_name FROM BIT_DB.Spotifydata ORDER BY popularity desc LIMIT 10); 




